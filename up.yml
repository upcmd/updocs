version: 1.0.0

vars:
  cached_functests_dir: ./build/functests
  cases_dir: ./build/cases
  log_dir: ./reflogs
  content_dir: ./content

dvars:
  - name: upproj_dir
    value: '{{ env "UP_PROJ_DIR" |validateMandatoryFailIfNone "upproj_dir" }}'
    flags: [vvv]

  - name: src_functests_dir
    value: '{{.upproj_dir}}/tests/functests-mock'

  - name: ref_dir
    value: '{{.cached_functests_dir}}'

tasks:
  -
    name: build
    desc: build the showcases automatically
    task:

      -
        func: shell
        desc: prepare all the self documented cases
        do:
          - rm -rf ./build
          - mkdir -p ./build
          - 'cp -rf {{.src_functests_dir}} {{.cached_functests_dir}}'
          - 'cd {{.cached_functests_dir}}; ls c????.yml'
        reg: cases

      - func: cmd
        desc: debug
        do:
          -
            name: print
            cmd: '{{.cases}}'

      - func: cmd
        desc: get the case list object
        dvars:
          - name: void
            value: '{{ .cases | splitLines |reg "caselist" }}'


      - func: cmd
        desc: show the caselist available
        do:
          -
            name: print
            cmd: 'cases: {{.caselist}}'

      -
        func: shell
        desc: prepare the directory for the already documented cases
        do:
          - rm -rf {{.cases_dir}}
          - mkdir -p {{.cases_dir}}

      -
        func: call
        desc: filter out all cases have already got documents
        do:
          - process_case
        loop: "caselist"

      -
        func: shell
        desc: copy generated docs to publish dir
        do:
          - rm -rf {{.cases_dir}}/cases
          - 'cp -rf {{.cases_dir}} {{.content_dir}}/'

  -
    name: process_case
    task:

      -
        func: cmd
        do:
          - name: reg
            cmd:
              name: casename
              value: '{{.loopitem}}'

          - name: print
            cmd: 'processing {{.casename}}'

          - name: readfile
            desc: read yml file
            cmd:
              filename: '{{.casename}}'
              dir: '{{.cached_functests_dir}}'
              reg: caseyml

          - name: print
            cmd: |
              yml file content:
              {{.caseyml}}

          - name: query
            cmd:
              ymlkey: caseyml
              path: doc_meta.
              ymlonly: true
              reg: docyml

      -
        func: cmd
        dvars:
          - name: casedoc
            value: '{{.docyml}}'
            expand: 2
            flags: [to_object, reg]

        do:
          - name: print
            cmd: |
              casedoc content:
              {{.casedoc}}

      -
        func: cmd
        do:
          - name: printobj
            cmd: casedoc_object

          - name: print
            desc: casedoc length
            cmd: '{{ .casedoc|len }}'

          - name: template
            desc: generate the document
            cmd:
              src: ./templates/doc.template
              dest: '{{.cases_dir}}/{{.casename | replace ".yml" ""}}.md'
              datakey: casedoc_object
        if: '{{ gt (.casedoc|len) 0 }}'

  -
    name: test
    task:

      # -
      #   func: shell
      #   desc: read file and get doc_meta as object
      #   vars:
      #     yml_path: ./build/functests'
      #     yml_file: c0001.yml
      #
      #   dvars:
      #     - name: caseyml
      #       ref: d0069.yml
      #
      #   do:
      #     - 'cd {{.upproj_dir}}/tests/functests; ls c????.yml'
      #   reg: cases

      -
        func: shell
        desc: read file and get doc_meta as object

      -
        func: shell
        desc: step2

