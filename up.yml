version: 1.0.0

vars:
  cached_functests_dir: ./build/functests
  cases_dir: ./build/cases
  content_dir: ./testcontent

dvars:
  - name: upproj_dir
    value: '{{ env "UP_PROJ_DIR" |validateMandatoryFailIfNone "upproj_dir" }}'
    flags: [vvv]

  - name: src_functests_dir
    value: '{{.upproj_dir}}/tests/functests-mock'

tasks:
  -
    name: build
    desc: build the showcases automatically
    task:

      -
        func: shell
        desc: prepare all the self documented cases
        do:
          - rm -rf ./build
          - mkdir -p ./build
          - 'cp -rf {{.src_functests_dir}} {{.cached_functests_dir}}'
          - 'cd {{.cached_functests_dir}}; ls c????.yml'
        reg: cases

      - func: cmd
        desc: debug
        do:
          -
            name: print
            cmd: '{{.cases}}'

      - func: cmd
        desc: get the case list object
        dvars:
          - name: void
            value: '{{ .cases | splitLines |reg "caselist" }}'


      - func: cmd
        desc: show the caselist available
        do:
          -
            name: print
            cmd: 'cases: {{.caselist}}'

      -
        func: shell
        desc: prepare the directory for the already documented cases
        do:
          - rm -rf {{.cases_dir}}
          - mkdir -p {{.cases_dir}}


      # -
      #   func: shell
      #   desc: get the cases object
      #   do:
      #     - |
      #       {{ range $idx, $file := .cases | splitLines -}}
      #       {{$casename :=  $file | replace ".yml" ""}}
      #       echo "==========failure case test {{$idx |add1}}==============="
      #       {{end}}

      # -
      #   func: shell
      #   desc: |-
      #     loop through c*.yml case file:
      #       parse the docs element to get the doc object using dvar ref
      #       loop through head and content items
      #       form the required object the markdown template page requires
      #       run the test and output the result to a tmp file to be included into markdown reference as log
      #   do:
      #     - echo "hello"

      -
        func: call
        desc: filter out all cases have already got documents
        do:
          - process_case
        loop: "caselist"

  -
    name: process_case
    task:

      -
        func: cmd
        do:
          - name: reg
            cmd:
              name: casename
              value: '{{.loopitem}}'

          - name: print
            cmd: 'processing {{.casename}}'

          - name: readfile
            desc: read yml file
            cmd:
              filename: '{{.casename}}'
              dir: '{{.cached_functests_dir}}'
              reg: caseyml

          - name: print
            cmd: |
              yml file content:
              {{.caseyml}}

          - name: to_object
            cmd:
              src: caseyml
              reg: caseobj

          - name: printobj
            cmd: caseobj

          - name: pause

          # TODO: add printobj_by_key
          # - name: printobj
          #   cmd: '{{.caseobj.doc_meta}}'

          - name: to_object
            cmd:
              src: '{{.caseobj.doc_meta}}'
              reg: docobj

          # - name: reg
          #   cmd:
          #     name: docobj
          #     value: '{{.caseobj.doc_meta}}'

          - name: printobj
            cmd: docobj

          - name: template
            desc: generate the document
            cmd:
              src: ./templates/doc.template
              dest: '{{.cases_dir}}/{{.casename | replace ".yml" ""}}.md'
              data: '{{.docobj}}'

      # -
      #   func: shell
      #
      #   do:
      #     - 'echo caseyml: {{.caseyml}}'
      #     - 'echo caseob: {{.caseobj}}'
          # - 'echo {{.doco}}'
          # - 'echo personname:{{.personname}}'
          # - 'echo {{.doco_object}}'

  -
    name: test
    task:

      # -
      #   func: shell
      #   desc: read file and get doc_meta as object
      #   vars:
      #     yml_path: ./build/functests'
      #     yml_file: c0001.yml
      #
      #   dvars:
      #     - name: caseyml
      #       ref: d0069.yml
      #
      #   do:
      #     - 'cd {{.upproj_dir}}/tests/functests; ls c????.yml'
      #   reg: cases

      -
        func: shell
        desc: read file and get doc_meta as object

      -
        func: shell
        desc: step2

